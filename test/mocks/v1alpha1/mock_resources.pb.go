// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: solo-kit/test/mocks/api/v1alpha1/mock_resources.proto

//
//package Comments
//package Comments a

package v1alpha1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/envoyproxy/go-control-plane/envoy/api/v2"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Mock resources for goofin off
type MockResource struct {
	Status        core.Status   `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	Metadata      core.Metadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata"`
	Data          string        `protobuf:"bytes,1,opt,name=data,json=data.json,proto3" json:"data.json"`
	SomeDumbField string        `protobuf:"bytes,100,opt,name=some_dumb_field,json=someDumbField,proto3" json:"some_dumb_field,omitempty"`
	// Types that are valid to be assigned to TestOneofFields:
	//	*MockResource_OneofOne
	//	*MockResource_OneofTwo
	TestOneofFields      isMockResource_TestOneofFields `protobuf_oneof:"test_oneof_fields"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *MockResource) Reset()         { *m = MockResource{} }
func (m *MockResource) String() string { return proto.CompactTextString(m) }
func (*MockResource) ProtoMessage()    {}
func (*MockResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_24be67979bd8e404, []int{0}
}
func (m *MockResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MockResource.Unmarshal(m, b)
}
func (m *MockResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MockResource.Marshal(b, m, deterministic)
}
func (m *MockResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MockResource.Merge(m, src)
}
func (m *MockResource) XXX_Size() int {
	return xxx_messageInfo_MockResource.Size(m)
}
func (m *MockResource) XXX_DiscardUnknown() {
	xxx_messageInfo_MockResource.DiscardUnknown(m)
}

var xxx_messageInfo_MockResource proto.InternalMessageInfo

type isMockResource_TestOneofFields interface {
	isMockResource_TestOneofFields()
	Equal(interface{}) bool
}

type MockResource_OneofOne struct {
	OneofOne string `protobuf:"bytes,3,opt,name=oneof_one,json=oneofOne,proto3,oneof" json:"oneof_one,omitempty"`
}
type MockResource_OneofTwo struct {
	OneofTwo bool `protobuf:"varint,2,opt,name=oneof_two,json=oneofTwo,proto3,oneof" json:"oneof_two,omitempty"`
}

func (*MockResource_OneofOne) isMockResource_TestOneofFields() {}
func (*MockResource_OneofTwo) isMockResource_TestOneofFields() {}

func (m *MockResource) GetTestOneofFields() isMockResource_TestOneofFields {
	if m != nil {
		return m.TestOneofFields
	}
	return nil
}

func (m *MockResource) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *MockResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *MockResource) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *MockResource) GetSomeDumbField() string {
	if m != nil {
		return m.SomeDumbField
	}
	return ""
}

func (m *MockResource) GetOneofOne() string {
	if x, ok := m.GetTestOneofFields().(*MockResource_OneofOne); ok {
		return x.OneofOne
	}
	return ""
}

func (m *MockResource) GetOneofTwo() bool {
	if x, ok := m.GetTestOneofFields().(*MockResource_OneofTwo); ok {
		return x.OneofTwo
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MockResource) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MockResource_OneofOne)(nil),
		(*MockResource_OneofTwo)(nil),
	}
}

type FakeResource struct {
	Count                uint32        `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Metadata             core.Metadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FakeResource) Reset()         { *m = FakeResource{} }
func (m *FakeResource) String() string { return proto.CompactTextString(m) }
func (*FakeResource) ProtoMessage()    {}
func (*FakeResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_24be67979bd8e404, []int{1}
}
func (m *FakeResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeResource.Unmarshal(m, b)
}
func (m *FakeResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeResource.Marshal(b, m, deterministic)
}
func (m *FakeResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeResource.Merge(m, src)
}
func (m *FakeResource) XXX_Size() int {
	return xxx_messageInfo_FakeResource.Size(m)
}
func (m *FakeResource) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeResource.DiscardUnknown(m)
}

var xxx_messageInfo_FakeResource proto.InternalMessageInfo

func (m *FakeResource) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *FakeResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func init() {
	proto.RegisterType((*MockResource)(nil), "testing.solo.io.MockResource")
	proto.RegisterType((*FakeResource)(nil), "testing.solo.io.FakeResource")
}

func init() {
	proto.RegisterFile("solo-kit/test/mocks/api/v1alpha1/mock_resources.proto", fileDescriptor_24be67979bd8e404)
}

var fileDescriptor_24be67979bd8e404 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x3f, 0x6f, 0xd3, 0x40,
	0x14, 0xaf, 0x83, 0x9b, 0x26, 0x47, 0xa3, 0x8a, 0x6b, 0x84, 0xac, 0xa8, 0xb4, 0x51, 0x07, 0x94,
	0x01, 0x7c, 0x6a, 0x11, 0x08, 0x18, 0x2d, 0x54, 0xb1, 0x54, 0x48, 0x86, 0x89, 0xc5, 0xba, 0xd8,
	0x2f, 0xee, 0xe1, 0xf8, 0x5e, 0xe4, 0x3b, 0xa7, 0xed, 0xda, 0x4f, 0xc3, 0x47, 0x60, 0x62, 0xe6,
	0x53, 0x74, 0x60, 0x64, 0xeb, 0xc0, 0x8e, 0xee, 0xce, 0x76, 0x04, 0x82, 0x85, 0xed, 0xf9, 0xf7,
	0xe7, 0xfc, 0xfb, 0xdd, 0x3d, 0xf2, 0x5c, 0xe1, 0x12, 0x9f, 0x16, 0x42, 0x33, 0x0d, 0x4a, 0xb3,
	0x12, 0xd3, 0x42, 0x31, 0xbe, 0x12, 0x6c, 0x7d, 0xc2, 0x97, 0xab, 0x0b, 0x7e, 0x62, 0xa1, 0xa4,
	0x02, 0x85, 0x75, 0x95, 0x82, 0x0a, 0x57, 0x15, 0x6a, 0xa4, 0x7b, 0x46, 0x2d, 0x64, 0x1e, 0x1a,
	0x7b, 0x28, 0x70, 0x72, 0x00, 0x72, 0x8d, 0xd7, 0xce, 0x79, 0xca, 0x32, 0xa1, 0x52, 0x5c, 0x43,
	0x75, 0xed, 0xe4, 0x93, 0x83, 0x1c, 0x31, 0x5f, 0x82, 0xa5, 0xb9, 0x94, 0xa8, 0xb9, 0x16, 0x28,
	0x9b, 0xc3, 0x26, 0xe3, 0x1c, 0x73, 0xb4, 0x23, 0x33, 0x53, 0x83, 0x52, 0xb8, 0xd2, 0x0e, 0x84,
	0x2b, 0xdd, 0x60, 0x87, 0x5d, 0x5a, 0x17, 0x91, 0x95, 0xa0, 0x79, 0xc6, 0x35, 0x6f, 0xff, 0xf3,
	0x27, 0xaf, 0x34, 0xd7, 0xb5, 0xfa, 0x97, 0xbb, 0xfd, 0x76, 0xfc, 0xf1, 0xd7, 0x1e, 0xd9, 0x3d,
	0xc7, 0xb4, 0x88, 0x9b, 0xb2, 0xf4, 0x05, 0xe9, 0xbb, 0x03, 0x82, 0xfe, 0xd4, 0x9b, 0xdd, 0x3f,
	0x1d, 0x87, 0x29, 0x56, 0xd0, 0x76, 0x0e, 0xdf, 0x5b, 0x2e, 0x1a, 0x7c, 0xf9, 0xe9, 0x7b, 0xdf,
	0x6e, 0x8f, 0xb6, 0xe2, 0x46, 0x4d, 0x5f, 0x92, 0x41, 0x1b, 0x2c, 0xd8, 0xb1, 0xce, 0x87, 0xbf,
	0x3b, 0xcf, 0x1b, 0x36, 0xf2, 0xad, 0xaf, 0x53, 0xd3, 0xc7, 0xc4, 0xb7, 0x2e, 0x6f, 0xea, 0xcd,
	0x86, 0xd1, 0xe8, 0xc7, 0xed, 0xd1, 0xd0, 0xd6, 0xfb, 0xa4, 0x50, 0xc6, 0x9b, 0x91, 0x3e, 0x21,
	0x7b, 0x0a, 0x4b, 0x48, 0xb2, 0xba, 0x9c, 0x27, 0x0b, 0x01, 0xcb, 0x2c, 0xc8, 0xac, 0xc5, 0x37,
	0x61, 0xe2, 0x91, 0x21, 0xdf, 0xd4, 0xe5, 0xfc, 0xcc, 0x50, 0xf4, 0x11, 0x19, 0xa2, 0x04, 0x5c,
	0x24, 0x28, 0x21, 0xb8, 0x67, 0x74, 0x6f, 0xb7, 0xe2, 0x81, 0x85, 0xde, 0x49, 0xd8, 0xd0, 0xfa,
	0x12, 0x83, 0xde, 0xd4, 0x9b, 0x0d, 0x3a, 0xfa, 0xc3, 0x25, 0xbe, 0xde, 0xbf, 0xb9, 0xf3, 0x7d,
	0xd2, 0x2b, 0x8b, 0x9b, 0x3b, 0x7f, 0x87, 0x6e, 0xdb, 0x15, 0x89, 0xf6, 0xc9, 0x03, 0xb3, 0x02,
	0x89, 0x33, 0xda, 0x04, 0xea, 0x58, 0x91, 0xdd, 0x33, 0x5e, 0x40, 0x77, 0x7f, 0x63, 0xb2, 0x9d,
	0x62, 0x2d, 0xb5, 0xad, 0x33, 0x8a, 0xdd, 0xc7, 0xff, 0xdf, 0x4e, 0x9b, 0x64, 0xd1, 0x24, 0x59,
	0xf0, 0x02, 0x54, 0xf4, 0xca, 0x34, 0xfe, 0xfc, 0xfd, 0xd0, 0xfb, 0xc8, 0x72, 0xa1, 0x2f, 0xea,
	0x79, 0x98, 0x62, 0xe9, 0x9e, 0x56, 0x20, 0xfb, 0xdb, 0x7a, 0xb7, 0xab, 0x3d, 0xef, 0xdb, 0x77,
	0x7f, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x06, 0x58, 0xe0, 0x05, 0x03, 0x00, 0x00,
}

func (this *MockResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource)
	if !ok {
		that2, ok := that.(MockResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if this.Data != that1.Data {
		return false
	}
	if this.SomeDumbField != that1.SomeDumbField {
		return false
	}
	if that1.TestOneofFields == nil {
		if this.TestOneofFields != nil {
			return false
		}
	} else if this.TestOneofFields == nil {
		return false
	} else if !this.TestOneofFields.Equal(that1.TestOneofFields) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *MockResource_OneofOne) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource_OneofOne)
	if !ok {
		that2, ok := that.(MockResource_OneofOne)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.OneofOne != that1.OneofOne {
		return false
	}
	return true
}
func (this *MockResource_OneofTwo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource_OneofTwo)
	if !ok {
		that2, ok := that.(MockResource_OneofTwo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.OneofTwo != that1.OneofTwo {
		return false
	}
	return true
}
func (this *FakeResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*FakeResource)
	if !ok {
		that2, ok := that.(FakeResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Count != that1.Count {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
