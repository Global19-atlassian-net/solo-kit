package v2alpha1

import (
	v1 "github.com/solo-io/solo-kit/pkg/api/v1/clients/kube/crd/solo.io/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"sigs.k8s.io/controller-runtime/pkg/conversion"
)

var _ conversion.Convertible = &MockResource{}

func (m *MockResource) ConvertTo(dst conversion.Hub) error {
	panic("implement me")
}

func (m *MockResource) ConvertFrom(src conversion.Hub) error {
	panic("implement me")
}

type MockResource struct {
	v1.Resource
}

func (m *MockResource) DeepCopyObject() runtime.Object {
	obj := m.Resource.DeepCopyObject()
	if res, ok := obj.(*v1.Resource); ok && res != nil {
		return &MockResource{Resource: *res}
	}
	return nil
}

// ResourceList is the generic Kubernetes API object wrapper
type MockResourceList struct {
	metav1.TypeMeta `json:",inline"`
	// +optional
	metav1.ListMeta `json:"metadata"`
	Items           []MockResource `json:"items"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MockResourceList) DeepCopyInto(out *MockResourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MockResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i].Resource)
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MockResourceList.
func (in *MockResourceList) DeepCopy() *MockResourceList {
	if in == nil {
		return nil
	}
	out := new(MockResourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MockResourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

var (
	MockResourceAddToScheme = MockResourceCrd.AddToScheme
)
