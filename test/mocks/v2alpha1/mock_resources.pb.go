// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/solo-kit/test/mocks/api/v2alpha1/mock_resources.proto

package v2alpha1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//The best mock resource you ever done seen
type MockResource struct {
	Status   core.Status   `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	Metadata core.Metadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata"`
	// Types that are valid to be assigned to WeStuckItInAOneof:
	//	*MockResource_SomeDumbField
	//	*MockResource_Data
	WeStuckItInAOneof isMockResource_WeStuckItInAOneof `protobuf_oneof:"we_stuck_it_in_a_oneof"`
	// Types that are valid to be assigned to TestOneofFields:
	//	*MockResource_OneofOne
	//	*MockResource_OneofTwo
	TestOneofFields      isMockResource_TestOneofFields `protobuf_oneof:"test_oneof_fields"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *MockResource) Reset()         { *m = MockResource{} }
func (m *MockResource) String() string { return proto.CompactTextString(m) }
func (*MockResource) ProtoMessage()    {}
func (*MockResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbc86c81bab68fcb, []int{0}
}
func (m *MockResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MockResource.Unmarshal(m, b)
}
func (m *MockResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MockResource.Marshal(b, m, deterministic)
}
func (m *MockResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MockResource.Merge(m, src)
}
func (m *MockResource) XXX_Size() int {
	return xxx_messageInfo_MockResource.Size(m)
}
func (m *MockResource) XXX_DiscardUnknown() {
	xxx_messageInfo_MockResource.DiscardUnknown(m)
}

var xxx_messageInfo_MockResource proto.InternalMessageInfo

type isMockResource_WeStuckItInAOneof interface {
	isMockResource_WeStuckItInAOneof()
	Equal(interface{}) bool
}
type isMockResource_TestOneofFields interface {
	isMockResource_TestOneofFields()
	Equal(interface{}) bool
}

type MockResource_SomeDumbField struct {
	SomeDumbField string `protobuf:"bytes,100,opt,name=some_dumb_field,json=someDumbField,proto3,oneof" json:"some_dumb_field,omitempty"`
}
type MockResource_Data struct {
	Data string `protobuf:"bytes,1,opt,name=data,json=data.json,proto3,oneof" json:"data.json"`
}
type MockResource_OneofOne struct {
	OneofOne string `protobuf:"bytes,3,opt,name=oneof_one,json=oneofOne,proto3,oneof" json:"oneof_one,omitempty"`
}
type MockResource_OneofTwo struct {
	OneofTwo bool `protobuf:"varint,2,opt,name=oneof_two,json=oneofTwo,proto3,oneof" json:"oneof_two,omitempty"`
}

func (*MockResource_SomeDumbField) isMockResource_WeStuckItInAOneof() {}
func (*MockResource_Data) isMockResource_WeStuckItInAOneof()          {}
func (*MockResource_OneofOne) isMockResource_TestOneofFields()        {}
func (*MockResource_OneofTwo) isMockResource_TestOneofFields()        {}

func (m *MockResource) GetWeStuckItInAOneof() isMockResource_WeStuckItInAOneof {
	if m != nil {
		return m.WeStuckItInAOneof
	}
	return nil
}
func (m *MockResource) GetTestOneofFields() isMockResource_TestOneofFields {
	if m != nil {
		return m.TestOneofFields
	}
	return nil
}

func (m *MockResource) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *MockResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *MockResource) GetSomeDumbField() string {
	if x, ok := m.GetWeStuckItInAOneof().(*MockResource_SomeDumbField); ok {
		return x.SomeDumbField
	}
	return ""
}

func (m *MockResource) GetData() string {
	if x, ok := m.GetWeStuckItInAOneof().(*MockResource_Data); ok {
		return x.Data
	}
	return ""
}

func (m *MockResource) GetOneofOne() string {
	if x, ok := m.GetTestOneofFields().(*MockResource_OneofOne); ok {
		return x.OneofOne
	}
	return ""
}

func (m *MockResource) GetOneofTwo() bool {
	if x, ok := m.GetTestOneofFields().(*MockResource_OneofTwo); ok {
		return x.OneofTwo
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MockResource) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MockResource_SomeDumbField)(nil),
		(*MockResource_Data)(nil),
		(*MockResource_OneofOne)(nil),
		(*MockResource_OneofTwo)(nil),
	}
}

type FrequentlyChangingAnnotationsResource struct {
	Metadata             core.Metadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata"`
	Blah                 string        `protobuf:"bytes,1,opt,name=blah,proto3" json:"blah,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FrequentlyChangingAnnotationsResource) Reset()         { *m = FrequentlyChangingAnnotationsResource{} }
func (m *FrequentlyChangingAnnotationsResource) String() string { return proto.CompactTextString(m) }
func (*FrequentlyChangingAnnotationsResource) ProtoMessage()    {}
func (*FrequentlyChangingAnnotationsResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbc86c81bab68fcb, []int{1}
}
func (m *FrequentlyChangingAnnotationsResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrequentlyChangingAnnotationsResource.Unmarshal(m, b)
}
func (m *FrequentlyChangingAnnotationsResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrequentlyChangingAnnotationsResource.Marshal(b, m, deterministic)
}
func (m *FrequentlyChangingAnnotationsResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrequentlyChangingAnnotationsResource.Merge(m, src)
}
func (m *FrequentlyChangingAnnotationsResource) XXX_Size() int {
	return xxx_messageInfo_FrequentlyChangingAnnotationsResource.Size(m)
}
func (m *FrequentlyChangingAnnotationsResource) XXX_DiscardUnknown() {
	xxx_messageInfo_FrequentlyChangingAnnotationsResource.DiscardUnknown(m)
}

var xxx_messageInfo_FrequentlyChangingAnnotationsResource proto.InternalMessageInfo

func (m *FrequentlyChangingAnnotationsResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *FrequentlyChangingAnnotationsResource) GetBlah() string {
	if m != nil {
		return m.Blah
	}
	return ""
}

func init() {
	proto.RegisterType((*MockResource)(nil), "testing.solo.io.MockResource")
	proto.RegisterType((*FrequentlyChangingAnnotationsResource)(nil), "testing.solo.io.FrequentlyChangingAnnotationsResource")
}

func init() {
	proto.RegisterFile("github.com/solo-io/solo-kit/test/mocks/api/v2alpha1/mock_resources.proto", fileDescriptor_bbc86c81bab68fcb)
}

var fileDescriptor_bbc86c81bab68fcb = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xc1, 0x6e, 0xd3, 0x4c,
	0x10, 0xce, 0xe6, 0xdf, 0x3f, 0x4d, 0x16, 0xaa, 0x0a, 0xb7, 0x2a, 0x56, 0x11, 0x34, 0xaa, 0x84,
	0xe4, 0x0b, 0x5e, 0x25, 0x08, 0x09, 0xf5, 0x86, 0x41, 0x55, 0x2e, 0x15, 0x92, 0xe1, 0xc4, 0x65,
	0xb5, 0xb6, 0x37, 0xce, 0x62, 0x7b, 0x27, 0x78, 0xd7, 0x8d, 0xb8, 0xa1, 0x3c, 0x02, 0x4f, 0xc1,
	0xa3, 0xf0, 0x08, 0x9c, 0x7a, 0xe0, 0xc8, 0xcd, 0x6f, 0x80, 0xbc, 0xb6, 0x53, 0x71, 0x41, 0x11,
	0x27, 0x7f, 0x33, 0xdf, 0xf7, 0xcd, 0x78, 0x46, 0xb3, 0x64, 0x91, 0x4a, 0xb3, 0xaa, 0x22, 0x3f,
	0x86, 0x82, 0x6a, 0xc8, 0xe1, 0x99, 0x84, 0xf6, 0x9b, 0x49, 0x43, 0x8d, 0xd0, 0x86, 0x16, 0x10,
	0x67, 0x9a, 0xf2, 0xb5, 0xa4, 0x37, 0x73, 0x9e, 0xaf, 0x57, 0x7c, 0x66, 0x53, 0xac, 0x14, 0x1a,
	0xaa, 0x32, 0x16, 0xda, 0x5f, 0x97, 0x60, 0xc0, 0x39, 0x6a, 0xd4, 0x52, 0xa5, 0x7e, 0x63, 0xf7,
	0x25, 0x9c, 0xcd, 0xfe, 0x56, 0xda, 0xd6, 0x9b, 0xd1, 0x42, 0x18, 0x9e, 0x70, 0xc3, 0xdb, 0x1a,
	0x67, 0x74, 0x0f, 0x8b, 0x36, 0xdc, 0x54, 0x5d, 0xd3, 0xbd, 0x7a, 0xf4, 0x71, 0x67, 0x79, 0x78,
	0xc3, 0x73, 0x99, 0x70, 0x23, 0x68, 0x0f, 0x3a, 0xe2, 0x24, 0x85, 0x14, 0x2c, 0xa4, 0x0d, 0x6a,
	0xb3, 0x17, 0x3f, 0x86, 0xe4, 0xfe, 0x35, 0xc4, 0x59, 0xd8, 0x8d, 0xeb, 0xcc, 0xc9, 0xa8, 0xfd,
	0x05, 0x77, 0x34, 0x45, 0xde, 0xbd, 0xf9, 0x89, 0x1f, 0x43, 0x29, 0xfa, 0xa9, 0xfd, 0x77, 0x96,
	0x0b, 0xf0, 0xf7, 0xdb, 0xf3, 0x41, 0xd8, 0x29, 0x9d, 0x97, 0x64, 0xdc, 0x4f, 0xea, 0x1e, 0x58,
	0xd7, 0xe9, 0x9f, 0xae, 0xeb, 0x8e, 0xed, 0x7c, 0x3b, 0xb5, 0xe3, 0x93, 0x23, 0x0d, 0x85, 0x60,
	0x49, 0x55, 0x44, 0x6c, 0x29, 0x45, 0x9e, 0xb8, 0xc9, 0x14, 0x79, 0x93, 0x00, 0x7f, 0xa9, 0x31,
	0x5a, 0x0c, 0xc2, 0xc3, 0x86, 0x7e, 0x53, 0x15, 0xd1, 0x55, 0x43, 0x3a, 0x1e, 0xc1, 0xb6, 0x0b,
	0xb2, 0xa2, 0xc3, 0x5f, 0xb7, 0xe7, 0x13, 0xbb, 0xdf, 0x8f, 0x1a, 0xd4, 0x62, 0x10, 0xde, 0x05,
	0xce, 0x63, 0x32, 0x01, 0x25, 0x60, 0xc9, 0x40, 0x09, 0xf7, 0xbf, 0x46, 0xbe, 0x40, 0xe1, 0xd8,
	0xa6, 0xde, 0x2a, 0x71, 0x47, 0x9b, 0x0d, 0xb8, 0xc3, 0x29, 0xf2, 0xc6, 0x3b, 0xfa, 0xfd, 0x06,
	0x2e, 0x8f, 0xb7, 0x35, 0xc6, 0x64, 0x58, 0x64, 0xdb, 0x1a, 0x1f, 0x38, 0xff, 0xdb, 0x23, 0x09,
	0x5c, 0x72, 0xba, 0x11, 0x4c, 0x9b, 0x2a, 0xce, 0x98, 0x34, 0x4c, 0x2a, 0xc6, 0x99, 0x75, 0x04,
	0xc7, 0xe4, 0x41, 0x73, 0x1e, 0x6d, 0xd4, 0xce, 0xa1, 0x2f, 0xbe, 0x22, 0xf2, 0xf4, 0xaa, 0x14,
	0x9f, 0x2a, 0xa1, 0x4c, 0xfe, 0xf9, 0xf5, 0x8a, 0xab, 0x54, 0xaa, 0xf4, 0x95, 0x52, 0x60, 0xb8,
	0x91, 0xa0, 0xf4, 0x6e, 0xe7, 0xff, 0xbe, 0x3f, 0x87, 0xe0, 0x28, 0xe7, 0xab, 0x76, 0x1f, 0xa1,
	0xc5, 0x97, 0x8f, 0xb6, 0x35, 0x1e, 0x11, 0xbc, 0x8c, 0x79, 0xd9, 0xfe, 0x7d, 0x83, 0xf4, 0xb6,
	0xc6, 0x43, 0x0f, 0x05, 0x2f, 0xbe, 0xfd, 0x7c, 0x82, 0x3e, 0xd0, 0x3d, 0x9f, 0x45, 0xff, 0x24,
	0xa2, 0x91, 0xbd, 0x96, 0xe7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x6f, 0xaf, 0x55, 0x50,
	0x03, 0x00, 0x00,
}

func (this *MockResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource)
	if !ok {
		that2, ok := that.(MockResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if that1.WeStuckItInAOneof == nil {
		if this.WeStuckItInAOneof != nil {
			return false
		}
	} else if this.WeStuckItInAOneof == nil {
		return false
	} else if !this.WeStuckItInAOneof.Equal(that1.WeStuckItInAOneof) {
		return false
	}
	if that1.TestOneofFields == nil {
		if this.TestOneofFields != nil {
			return false
		}
	} else if this.TestOneofFields == nil {
		return false
	} else if !this.TestOneofFields.Equal(that1.TestOneofFields) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *MockResource_SomeDumbField) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource_SomeDumbField)
	if !ok {
		that2, ok := that.(MockResource_SomeDumbField)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SomeDumbField != that1.SomeDumbField {
		return false
	}
	return true
}
func (this *MockResource_Data) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource_Data)
	if !ok {
		that2, ok := that.(MockResource_Data)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Data != that1.Data {
		return false
	}
	return true
}
func (this *MockResource_OneofOne) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource_OneofOne)
	if !ok {
		that2, ok := that.(MockResource_OneofOne)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.OneofOne != that1.OneofOne {
		return false
	}
	return true
}
func (this *MockResource_OneofTwo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource_OneofTwo)
	if !ok {
		that2, ok := that.(MockResource_OneofTwo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.OneofTwo != that1.OneofTwo {
		return false
	}
	return true
}
func (this *FrequentlyChangingAnnotationsResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*FrequentlyChangingAnnotationsResource)
	if !ok {
		that2, ok := that.(FrequentlyChangingAnnotationsResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if this.Blah != that1.Blah {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
