syntax = "proto3";
package mocks.api.v1;
option go_package = "github.com/solo-io/solo-kit/test/mocks";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/metadata.proto";
import "github.com/solo-io/solo-kit/api/v1/status.proto";

/*
@solo-kit:resource.short_name=mk
@solo-kit:resource.plural_name=Mocks
@solo-kit:resource.resource_groups=testing.solo.io,blesting.solo.io
*/
message MockResource {
    string data = 1;
    core.solo.io.Status status = 6 [(gogoproto.nullable) = false];
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];
}

/*
@solo-kit:resource
@solo-kit:resource.short_name=fk
@solo-kit:resource.plural_name=Fakes
@solo-kit:resource.resource_groups=testing.solo.io,blesting.solo.io
*/
message FakeResource {
    uint32 count = 1;
    core.solo.io.Status status = 6 [(gogoproto.nullable) = false];
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];
}

/*
@solo-kit:resource
@solo-kit:resource.data_type
@solo-kit:resource.short_name=mkd
@solo-kit:resource.plural_name=MockDatas
@solo-kit:resource.group_name=testing.solo.io
@solo-kit:resource.version=v1
*/
message MockData {
    map<string,string> data = 1;
    core.solo.io.Status status = 6 [(gogoproto.nullable) = false];
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];
}
