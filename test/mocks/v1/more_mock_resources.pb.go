// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: test/mocks/api/v1/more_mock_resources.proto

package v1

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//Description of the AnotherMockResource
type AnotherMockResource struct {
	Metadata core.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata"`
	Status   core.Status   `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	// comments that go above the basic field in our docs
	BasicField           string   `protobuf:"bytes,2,opt,name=basic_field,json=basicField,proto3" json:"basic_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnotherMockResource) Reset()         { *m = AnotherMockResource{} }
func (m *AnotherMockResource) String() string { return proto.CompactTextString(m) }
func (*AnotherMockResource) ProtoMessage()    {}
func (*AnotherMockResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10da893cfb8d651, []int{0}
}
func (m *AnotherMockResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnotherMockResource.Unmarshal(m, b)
}
func (m *AnotherMockResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnotherMockResource.Marshal(b, m, deterministic)
}
func (m *AnotherMockResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnotherMockResource.Merge(m, src)
}
func (m *AnotherMockResource) XXX_Size() int {
	return xxx_messageInfo_AnotherMockResource.Size(m)
}
func (m *AnotherMockResource) XXX_DiscardUnknown() {
	xxx_messageInfo_AnotherMockResource.DiscardUnknown(m)
}

var xxx_messageInfo_AnotherMockResource proto.InternalMessageInfo

func (m *AnotherMockResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *AnotherMockResource) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *AnotherMockResource) GetBasicField() string {
	if m != nil {
		return m.BasicField
	}
	return ""
}

type ClusterResource struct {
	Metadata core.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata"`
	Status   core.Status   `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	// comments that go above the basic field in our docs
	BasicField           string   `protobuf:"bytes,2,opt,name=basic_field,json=basicField,proto3" json:"basic_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterResource) Reset()         { *m = ClusterResource{} }
func (m *ClusterResource) String() string { return proto.CompactTextString(m) }
func (*ClusterResource) ProtoMessage()    {}
func (*ClusterResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_e10da893cfb8d651, []int{1}
}
func (m *ClusterResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterResource.Unmarshal(m, b)
}
func (m *ClusterResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterResource.Marshal(b, m, deterministic)
}
func (m *ClusterResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterResource.Merge(m, src)
}
func (m *ClusterResource) XXX_Size() int {
	return xxx_messageInfo_ClusterResource.Size(m)
}
func (m *ClusterResource) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterResource.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterResource proto.InternalMessageInfo

func (m *ClusterResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *ClusterResource) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *ClusterResource) GetBasicField() string {
	if m != nil {
		return m.BasicField
	}
	return ""
}

func init() {
	proto.RegisterType((*AnotherMockResource)(nil), "testing.solo.io.AnotherMockResource")
	proto.RegisterType((*ClusterResource)(nil), "testing.solo.io.ClusterResource")
}

func init() {
	proto.RegisterFile("test/mocks/api/v1/more_mock_resources.proto", fileDescriptor_e10da893cfb8d651)
}

var fileDescriptor_e10da893cfb8d651 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x52, 0xcf, 0x4a, 0x02, 0x41,
	0x18, 0x6f, 0x6c, 0xb3, 0x1a, 0x0f, 0xc6, 0x24, 0xb2, 0x48, 0xa8, 0x18, 0x81, 0x11, 0xed, 0xa2,
	0x11, 0x44, 0xb7, 0x36, 0xe8, 0xe6, 0xc5, 0x6e, 0x5d, 0x64, 0x1c, 0xa7, 0x75, 0x70, 0xd7, 0x4f,
	0x66, 0x66, 0xc5, 0xb3, 0x4f, 0xd3, 0xa3, 0x44, 0xf4, 0x0c, 0x1d, 0x7a, 0x03, 0x6f, 0x1e, 0x63,
	0x76, 0x76, 0x97, 0x0a, 0xba, 0x77, 0xdb, 0xfd, 0xfd, 0xe1, 0xfb, 0xfd, 0xbe, 0x6f, 0xf0, 0x85,
	0xe6, 0x4a, 0xfb, 0x31, 0xb0, 0x99, 0xf2, 0xe9, 0x42, 0xf8, 0xcb, 0x9e, 0x1f, 0x83, 0xe4, 0x23,
	0x83, 0x8c, 0x24, 0x57, 0x90, 0x48, 0xc6, 0x95, 0xb7, 0x90, 0xa0, 0x81, 0x54, 0x8d, 0x58, 0xcc,
	0x43, 0x4f, 0x41, 0x04, 0x9e, 0x80, 0x46, 0x2d, 0x84, 0x10, 0x52, 0xce, 0x37, 0x5f, 0x56, 0xd6,
	0x20, 0x7c, 0xa5, 0x2d, 0xc8, 0x57, 0x3a, 0xc3, 0x9a, 0xc6, 0x72, 0x39, 0x13, 0xba, 0x98, 0xc2,
	0x35, 0x9d, 0x50, 0x4d, 0x33, 0xfe, 0xe4, 0x37, 0xaf, 0x34, 0xd5, 0x89, 0xfa, 0xcb, 0x9d, 0xff,
	0x5b, 0xbe, 0xf3, 0x8e, 0xf0, 0xf1, 0xdd, 0x1c, 0xf4, 0x94, 0xcb, 0x01, 0xb0, 0xd9, 0x30, 0xcb,
	0x4d, 0x6e, 0xf0, 0x41, 0x3e, 0xc7, 0x45, 0x6d, 0xd4, 0xad, 0xf4, 0xeb, 0x1e, 0x03, 0xc9, 0xf3,
	0x02, 0xde, 0x20, 0x63, 0x03, 0xe7, 0xf5, 0xa3, 0xb5, 0x33, 0x2c, 0xd4, 0xe4, 0x1a, 0x97, 0x6d,
	0x02, 0xb7, 0x9c, 0xfa, 0x6a, 0x3f, 0x7d, 0x8f, 0x29, 0x17, 0xec, 0x6f, 0x03, 0x94, 0x1a, 0x33,
	0x31, 0x69, 0xe1, 0xca, 0x98, 0x2a, 0xc1, 0x46, 0xcf, 0x82, 0x47, 0x13, 0xb7, 0xd4, 0x46, 0xdd,
	0xc3, 0x21, 0x4e, 0xa1, 0x07, 0x83, 0xdc, 0x9e, 0xae, 0x37, 0xce, 0x1e, 0xde, 0xa5, 0xb1, 0x5c,
	0x6f, 0x9c, 0x3a, 0xa9, 0x51, 0x9b, 0xda, 0xac, 0xbb, 0xd8, 0x76, 0xe7, 0x0d, 0xe1, 0xea, 0x7d,
	0x94, 0x28, 0xcd, 0xe5, 0x3f, 0xae, 0x72, 0x66, 0xab, 0xb0, 0xc8, 0x54, 0x21, 0xe4, 0x88, 0xd9,
	0xc4, 0x45, 0x8d, 0xf5, 0xc6, 0x29, 0xb9, 0x28, 0xe8, 0x6f, 0x03, 0xf4, 0xf2, 0xd9, 0x44, 0x4f,
	0xe7, 0xa1, 0xd0, 0xd3, 0x64, 0xec, 0x31, 0x88, 0xed, 0xfd, 0x04, 0x14, 0x77, 0xf4, 0xbf, 0x3d,
	0xc3, 0x65, 0x6f, 0x5c, 0x4e, 0xcf, 0x7a, 0xf5, 0x15, 0x00, 0x00, 0xff, 0xff, 0xad, 0x1b, 0x20,
	0xc7, 0x9e, 0x02, 0x00, 0x00,
}

func (this *AnotherMockResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AnotherMockResource)
	if !ok {
		that2, ok := that.(AnotherMockResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if this.BasicField != that1.BasicField {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *ClusterResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ClusterResource)
	if !ok {
		that2, ok := that.(ClusterResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if this.BasicField != that1.BasicField {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
