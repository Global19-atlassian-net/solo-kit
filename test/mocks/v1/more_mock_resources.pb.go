// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/solo-kit/test/mocks/api/v1/more_mock_resources.proto

package v1 // import "github.com/solo-io/solo-kit/test/mocks/v1"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"

import bytes "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
// Description of the AnotherMockResource
type AnotherMockResource struct {
	Metadata core.Metadata `protobuf:"bytes,1,opt,name=metadata" json:"metadata"`
	Status   core.Status   `protobuf:"bytes,6,opt,name=status" json:"status"`
	// comments that go above the basic field in our docs
	BasicField           string   `protobuf:"bytes,2,opt,name=basic_field,json=basicField,proto3" json:"basic_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnotherMockResource) Reset()         { *m = AnotherMockResource{} }
func (m *AnotherMockResource) String() string { return proto.CompactTextString(m) }
func (*AnotherMockResource) ProtoMessage()    {}
func (*AnotherMockResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_more_mock_resources_1df5d2b2d127817c, []int{0}
}
func (m *AnotherMockResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnotherMockResource.Unmarshal(m, b)
}
func (m *AnotherMockResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnotherMockResource.Marshal(b, m, deterministic)
}
func (dst *AnotherMockResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnotherMockResource.Merge(dst, src)
}
func (m *AnotherMockResource) XXX_Size() int {
	return xxx_messageInfo_AnotherMockResource.Size(m)
}
func (m *AnotherMockResource) XXX_DiscardUnknown() {
	xxx_messageInfo_AnotherMockResource.DiscardUnknown(m)
}

var xxx_messageInfo_AnotherMockResource proto.InternalMessageInfo

func (m *AnotherMockResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *AnotherMockResource) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *AnotherMockResource) GetBasicField() string {
	if m != nil {
		return m.BasicField
	}
	return ""
}

func init() {
	proto.RegisterType((*AnotherMockResource)(nil), "testing.solo.io.AnotherMockResource")
}
func (this *AnotherMockResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*AnotherMockResource)
	if !ok {
		that2, ok := that.(AnotherMockResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if this.BasicField != that1.BasicField {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

func init() {
	proto.RegisterFile("github.com/solo-io/solo-kit/test/mocks/api/v1/more_mock_resources.proto", fileDescriptor_more_mock_resources_1df5d2b2d127817c)
}

var fileDescriptor_more_mock_resources_1df5d2b2d127817c = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x72, 0x4f, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0xce, 0xcf, 0xc9, 0xd7, 0xcd, 0xcc, 0x87, 0xd0,
	0xd9, 0x99, 0x25, 0xfa, 0x25, 0xa9, 0xc5, 0x25, 0xfa, 0xb9, 0xf9, 0xc9, 0xd9, 0xc5, 0xfa, 0x89,
	0x05, 0x99, 0xfa, 0x65, 0x86, 0xfa, 0xb9, 0xf9, 0x45, 0xa9, 0xf1, 0x20, 0x91, 0xf8, 0xa2, 0xd4,
	0xe2, 0xfc, 0xd2, 0xa2, 0xe4, 0xd4, 0x62, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0x7e, 0x90,
	0xe2, 0xcc, 0xbc, 0x74, 0x3d, 0x90, 0x6e, 0xbd, 0xcc, 0x7c, 0x29, 0x91, 0xf4, 0xfc, 0xf4, 0x7c,
	0xb0, 0x9c, 0x3e, 0x88, 0x05, 0x51, 0x26, 0x65, 0x88, 0xcf, 0x3e, 0x98, 0x25, 0xa9, 0x25, 0x89,
	0x29, 0x89, 0x25, 0x89, 0x50, 0x2d, 0xfa, 0x44, 0x68, 0x29, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x26,
	0xc1, 0x0e, 0x18, 0x1f, 0xa2, 0x45, 0xe9, 0x24, 0x23, 0x97, 0xb0, 0x63, 0x5e, 0x7e, 0x49, 0x46,
	0x6a, 0x91, 0x6f, 0x7e, 0x72, 0x76, 0x10, 0xd4, 0x73, 0x42, 0x16, 0x5c, 0x1c, 0x30, 0xd7, 0x48,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xe9, 0x25, 0xe7, 0x17, 0xa5, 0xc2, 0x7c, 0xa9, 0xe7,
	0x0b, 0x95, 0x75, 0x62, 0x39, 0x71, 0x4f, 0x9e, 0x21, 0x08, 0xae, 0x5a, 0xc8, 0x88, 0x8b, 0x0d,
	0xe2, 0x28, 0x09, 0x36, 0xb0, 0x3e, 0x11, 0x54, 0x7d, 0xc1, 0x60, 0x39, 0xa8, 0x2e, 0xa8, 0x4a,
	0x21, 0x79, 0x2e, 0xee, 0xa4, 0xc4, 0xe2, 0xcc, 0xe4, 0xf8, 0xb4, 0xcc, 0xd4, 0x9c, 0x14, 0x09,
	0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x2e, 0xb0, 0x90, 0x1b, 0x48, 0xc4, 0x4a, 0xb9, 0xe9, 0x23,
	0x0b, 0x2b, 0x17, 0x73, 0x62, 0x6e, 0x51, 0xd3, 0x47, 0x16, 0x31, 0x21, 0x91, 0x44, 0x88, 0x93,
	0x41, 0x11, 0x02, 0x8f, 0x0f, 0x27, 0xfd, 0x15, 0x8f, 0xe4, 0x18, 0xa3, 0x34, 0x89, 0x8c, 0xd8,
	0x32, 0xc3, 0x24, 0x36, 0x70, 0x18, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x72, 0x4b, 0x73,
	0x6e, 0x0c, 0x02, 0x00, 0x00,
}
