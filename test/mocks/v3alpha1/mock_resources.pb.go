// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/solo-kit/test/mocks/api/v3alpha1/mock_resources.proto

package v3alpha1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

//
//The best mock resource you ever done seen -- new and improved with just one field
type MockResource struct {
	Status               core.Status   `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	Metadata             core.Metadata `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata"`
	SingleValue          string        `protobuf:"bytes,1,opt,name=single_value,json=singleValue,proto3" json:"single_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MockResource) Reset()         { *m = MockResource{} }
func (m *MockResource) String() string { return proto.CompactTextString(m) }
func (*MockResource) ProtoMessage()    {}
func (*MockResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_188c51c4f3536a70, []int{0}
}
func (m *MockResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MockResource.Unmarshal(m, b)
}
func (m *MockResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MockResource.Marshal(b, m, deterministic)
}
func (m *MockResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MockResource.Merge(m, src)
}
func (m *MockResource) XXX_Size() int {
	return xxx_messageInfo_MockResource.Size(m)
}
func (m *MockResource) XXX_DiscardUnknown() {
	xxx_messageInfo_MockResource.DiscardUnknown(m)
}

var xxx_messageInfo_MockResource proto.InternalMessageInfo

func (m *MockResource) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *MockResource) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *MockResource) GetSingleValue() string {
	if m != nil {
		return m.SingleValue
	}
	return ""
}

func init() {
	proto.RegisterType((*MockResource)(nil), "testing.solo.io.MockResource")
}

func init() {
	proto.RegisterFile("github.com/solo-io/solo-kit/test/mocks/api/v3alpha1/mock_resources.proto", fileDescriptor_188c51c4f3536a70)
}

var fileDescriptor_188c51c4f3536a70 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xf2, 0x48, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0xce, 0xcf, 0xc9, 0xd7, 0xcd, 0xcc, 0x87, 0xd0,
	0xd9, 0x99, 0x25, 0xfa, 0x25, 0xa9, 0xc5, 0x25, 0xfa, 0xb9, 0xf9, 0xc9, 0xd9, 0xc5, 0xfa, 0x89,
	0x05, 0x99, 0xfa, 0x65, 0xc6, 0x89, 0x39, 0x05, 0x19, 0x89, 0x86, 0x60, 0xa1, 0xf8, 0xa2, 0xd4,
	0xe2, 0xfc, 0xd2, 0xa2, 0xe4, 0xd4, 0x62, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21, 0x7e, 0x90,
	0xea, 0xcc, 0xbc, 0x74, 0x3d, 0x90, 0x76, 0xbd, 0xcc, 0x7c, 0x29, 0x43, 0x7c, 0x46, 0x83, 0xcd,
	0x33, 0xd4, 0xcf, 0x4d, 0x2d, 0x49, 0x4c, 0x49, 0x2c, 0x49, 0x84, 0x98, 0x21, 0xa5, 0x4f, 0x84,
	0x96, 0xe2, 0x92, 0xc4, 0x92, 0x52, 0xa8, 0xa5, 0x44, 0xd9, 0x01, 0xe3, 0x43, 0xb5, 0x88, 0xa4,
	0xe7, 0xa7, 0xe7, 0x83, 0x99, 0xfa, 0x20, 0x16, 0x44, 0x54, 0x69, 0x0b, 0x23, 0x17, 0x8f, 0x6f,
	0x7e, 0x72, 0x76, 0x10, 0xd4, 0x57, 0x42, 0x46, 0x5c, 0x6c, 0x10, 0x9b, 0x24, 0xd8, 0x14, 0x18,
	0x35, 0xb8, 0x8d, 0x44, 0xf4, 0x92, 0xf3, 0x8b, 0x52, 0x61, 0x9e, 0xd3, 0x0b, 0x06, 0xcb, 0x39,
	0xb1, 0x9c, 0xb8, 0x27, 0xcf, 0x10, 0x04, 0x55, 0x29, 0x64, 0xc1, 0xc5, 0x01, 0xf3, 0x90, 0x04,
	0x3b, 0x58, 0x97, 0x18, 0xaa, 0x2e, 0x5f, 0xa8, 0x2c, 0x54, 0x1f, 0x5c, 0xb5, 0x90, 0x22, 0x17,
	0x4f, 0x71, 0x66, 0x5e, 0x7a, 0x4e, 0x6a, 0x7c, 0x59, 0x62, 0x4e, 0x69, 0xaa, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x37, 0x44, 0x2c, 0x0c, 0x24, 0x64, 0x25, 0xdc, 0xf4, 0x91, 0x85, 0x85,
	0x8b, 0x29, 0x37, 0xbb, 0xe9, 0x23, 0x0b, 0xbb, 0x10, 0x2b, 0x38, 0x5a, 0x9c, 0x4c, 0x57, 0x3c,
	0x92, 0x63, 0x8c, 0xd2, 0x27, 0x32, 0x12, 0x61, 0x11, 0x98, 0xc4, 0x06, 0xf6, 0xb4, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x74, 0x0a, 0xf7, 0x63, 0xfe, 0x01, 0x00, 0x00,
}

func (this *MockResource) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MockResource)
	if !ok {
		that2, ok := that.(MockResource)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if this.SingleValue != that1.SingleValue {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
