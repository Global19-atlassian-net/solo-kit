// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: solo-kit.proto

package core // import "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ResourceOptions struct {
	// options for the kubernetes CRD based on this message
	Crd                  *CrdOptions `protobuf:"bytes,1,opt,name=crd" json:"crd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResourceOptions) Reset()         { *m = ResourceOptions{} }
func (m *ResourceOptions) String() string { return proto.CompactTextString(m) }
func (*ResourceOptions) ProtoMessage()    {}
func (*ResourceOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_solo_kit_b0bb72d007f5c6c1, []int{0}
}
func (m *ResourceOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceOptions.Unmarshal(m, b)
}
func (m *ResourceOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceOptions.Marshal(b, m, deterministic)
}
func (dst *ResourceOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceOptions.Merge(dst, src)
}
func (m *ResourceOptions) XXX_Size() int {
	return xxx_messageInfo_ResourceOptions.Size(m)
}
func (m *ResourceOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceOptions proto.InternalMessageInfo

func (m *ResourceOptions) GetCrd() *CrdOptions {
	if m != nil {
		return m.Crd
	}
	return nil
}

type CrdOptions struct {
	// becomes the kubernetes short name for the generated crd
	ShortName string `protobuf:"bytes,1,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	// becomes the kubernetes plural name for the generated crd
	PluralName string `protobuf:"bytes,2,opt,name=plural_name,json=pluralName,proto3" json:"plural_name,omitempty"`
	// becomes the resource scope in kubernetes, e.g. cluster or namespaced
	ClusterScoped        bool     `protobuf:"varint,4,opt,name=cluster_scoped,json=clusterScoped,proto3" json:"cluster_scoped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrdOptions) Reset()         { *m = CrdOptions{} }
func (m *CrdOptions) String() string { return proto.CompactTextString(m) }
func (*CrdOptions) ProtoMessage()    {}
func (*CrdOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_solo_kit_b0bb72d007f5c6c1, []int{1}
}
func (m *CrdOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrdOptions.Unmarshal(m, b)
}
func (m *CrdOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrdOptions.Marshal(b, m, deterministic)
}
func (dst *CrdOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrdOptions.Merge(dst, src)
}
func (m *CrdOptions) XXX_Size() int {
	return xxx_messageInfo_CrdOptions.Size(m)
}
func (m *CrdOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CrdOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CrdOptions proto.InternalMessageInfo

func (m *CrdOptions) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *CrdOptions) GetPluralName() string {
	if m != nil {
		return m.PluralName
	}
	return ""
}

func (m *CrdOptions) GetClusterScoped() bool {
	if m != nil {
		return m.ClusterScoped
	}
	return false
}

var E_Resource = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*ResourceOptions)(nil),
	Field:         10000,
	Name:          "core.solo.io.resource",
	Tag:           "bytes,10000,opt,name=resource",
	Filename:      "solo-kit.proto",
}

var E_SkipHashing = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         10000,
	Name:          "core.solo.io.skip_hashing",
	Tag:           "varint,10000,opt,name=skip_hashing,json=skipHashing",
	Filename:      "solo-kit.proto",
}

func init() {
	proto.RegisterType((*ResourceOptions)(nil), "core.solo.io.ResourceOptions")
	proto.RegisterType((*CrdOptions)(nil), "core.solo.io.CrdOptions")
	proto.RegisterExtension(E_Resource)
	proto.RegisterExtension(E_SkipHashing)
}

func init() { proto.RegisterFile("solo-kit.proto", fileDescriptor_solo_kit_b0bb72d007f5c6c1) }

var fileDescriptor_solo_kit_b0bb72d007f5c6c1 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x41, 0x4b, 0x3b, 0x31,
	0x10, 0xc5, 0xe9, 0xff, 0x2f, 0xd2, 0x4e, 0x6b, 0x85, 0x3d, 0x2d, 0x42, 0x69, 0x29, 0x08, 0x45,
	0x30, 0x41, 0x45, 0x84, 0x82, 0x07, 0x15, 0xc4, 0x8b, 0x15, 0xd6, 0x9b, 0x1e, 0x4a, 0x9a, 0x8d,
	0xd9, 0xd0, 0xb4, 0x13, 0x32, 0x59, 0x3f, 0x87, 0x1f, 0x59, 0x36, 0xbb, 0xab, 0x56, 0xaf, 0x6f,
	0xde, 0xbc, 0x37, 0x3f, 0x06, 0x86, 0x84, 0x16, 0x4f, 0xd7, 0x26, 0x30, 0xe7, 0x31, 0x60, 0x32,
	0x90, 0xe8, 0x15, 0xab, 0x44, 0x66, 0xf0, 0x68, 0xa2, 0x11, 0xb5, 0x55, 0x3c, 0xce, 0x56, 0xe5,
	0x1b, 0xcf, 0x15, 0x49, 0x6f, 0x5c, 0x40, 0x5f, 0xfb, 0xa7, 0xd7, 0x70, 0x98, 0x29, 0xc2, 0xd2,
	0x4b, 0xf5, 0xe4, 0x82, 0xc1, 0x2d, 0x25, 0x27, 0xf0, 0x5f, 0xfa, 0x3c, 0xed, 0x4c, 0x3a, 0xb3,
	0xfe, 0x79, 0xca, 0x7e, 0x06, 0xb2, 0x3b, 0x9f, 0x37, 0xb6, 0xac, 0x32, 0x4d, 0x09, 0xe0, 0x5b,
	0x4a, 0x46, 0x00, 0x54, 0xa0, 0x0f, 0xcb, 0xad, 0xd8, 0xa8, 0x18, 0xd0, 0xcb, 0x7a, 0x51, 0x59,
	0x88, 0x8d, 0x4a, 0xc6, 0xd0, 0x77, 0xb6, 0xf4, 0xc2, 0xd6, 0xf3, 0x7f, 0x71, 0x0e, 0xb5, 0x14,
	0x0d, 0xc7, 0x30, 0x94, 0xb6, 0xa4, 0xa0, 0xfc, 0x92, 0x24, 0x3a, 0x95, 0xa7, 0x7b, 0x93, 0xce,
	0xac, 0x9b, 0x1d, 0x34, 0xea, 0x73, 0x14, 0xe7, 0xaf, 0xd0, 0xf5, 0xcd, 0xcd, 0xc9, 0x98, 0xd5,
	0x88, 0xac, 0x45, 0x64, 0x8f, 0x8a, 0x48, 0xe8, 0x96, 0x26, 0xfd, 0x58, 0x44, 0x8e, 0xd1, 0x2e,
	0xc7, 0x2f, 0xe6, 0xec, 0x2b, 0x70, 0x7e, 0x03, 0x03, 0x5a, 0x1b, 0xb7, 0x2c, 0x04, 0x15, 0x66,
	0xab, 0x93, 0xd1, 0x9f, 0x82, 0x7b, 0xa3, 0x6c, 0xbe, 0x13, 0xdf, 0xcd, 0xfa, 0xd5, 0xce, 0x43,
	0xbd, 0x72, 0x7b, 0xf5, 0x72, 0xa9, 0x4d, 0x28, 0xca, 0x15, 0x93, 0xb8, 0xe1, 0xf1, 0x41, 0x06,
	0x79, 0xfb, 0x28, 0xee, 0xd6, 0x9a, 0x0b, 0x67, 0xf8, 0xfb, 0x19, 0x6f, 0x5b, 0x89, 0x57, 0xd7,
	0xad, 0xf6, 0x63, 0xc7, 0xc5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xfb, 0xa4, 0x12, 0xd5,
	0x01, 0x00, 0x00,
}
