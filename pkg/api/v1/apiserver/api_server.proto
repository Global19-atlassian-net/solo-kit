syntax = "proto3";
package apiserver.api.v1;
option go_package = "github.com/solo-io/solo-kit/pkg/api/v1/apiserver";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/duration.proto";
option (gogoproto.equal_all) = true;

message Resource {
    string kind = 1;
    google.protobuf.Struct data = 4;
}

/*
GRPC stuff
*/
message ReadRequest {
    string name = 1;
    string namespace = 2;
    string kind = 3;
}

message ReadResponse {
    Resource resource = 1;
}

message WriteRequest {
    Resource resource = 1;
    bool overwrite_existing = 2;
}

message WriteResponse {
    Resource resource = 1;
}

message DeleteRequest {
    string name = 1;
    string namespace = 2;
    string kind = 3;
    bool ignore_not_exist = 4;
}

message DeleteResponse {
}

message ListRequest {
    string namespace = 2;
    string kind = 3;
}

message ListResponse {
    repeated Resource resource_list = 1;
}

message WatchRequest {
    string namespace = 2;
    string kind = 3;
    google.protobuf.Duration sync_frequency = 4;
}

message WatchResponse {
    repeated Resource resource_list = 1;
}

message RegisterRequest {
}
message RegisterResponse {
}

service ApiServer {
    rpc Register (RegisterRequest) returns (RegisterResponse) {
    }
    rpc Read (ReadRequest) returns (ReadResponse) {
    }
    rpc Write (WriteRequest) returns (WriteResponse) {
    }
    rpc Delete (DeleteRequest) returns (DeleteResponse) {
    }
    rpc List (ListRequest) returns (ListResponse) {
    }
    rpc Watch (WatchRequest) returns (stream ListResponse) {
    }
}
