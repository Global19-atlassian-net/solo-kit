// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: policy/policy.proto

/*
Package policy is a generated protocol buffer package.

It is generated from these files:
	policy/policy.proto

It has these top-level messages:
	Policy
	Identity
*/
package policy

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import core_solo_io "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
import core_solo_io1 "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Capability int32

const (
	Capability_READ   Capability = 0
	Capability_WRITE  Capability = 1
	Capability_DELETE Capability = 2
	Capability_LIST   Capability = 3
	Capability_WATCH  Capability = 4
)

var Capability_name = map[int32]string{
	0: "READ",
	1: "WRITE",
	2: "DELETE",
	3: "LIST",
	4: "WATCH",
}
var Capability_value = map[string]int32{
	"READ":   0,
	"WRITE":  1,
	"DELETE": 2,
	"LIST":   3,
	"WATCH":  4,
}

func (x Capability) String() string {
	return proto.EnumName(Capability_name, int32(x))
}
func (Capability) EnumDescriptor() ([]byte, []int) { return fileDescriptorPolicy, []int{0} }

//
// @solo-kit:resource
// @solo-kit:resource.short_name=policy
// @solo-kit:resource.plural_name=policies
// @solo-kit:resource.group_name=authorization.solo.io
// @solo-kit:resource.version=v1
type Policy struct {
	// description of the policy (optional)
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// list of the names of resources the policy applies to
	Resources []string `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
	// list of the capabilities the policy grants
	Capabilities []Capability `protobuf:"varint,4,rep,packed,name=capabilities,enum=authorization.solo.io.Capability" json:"capabilities,omitempty"`
	// list of the names of identities the policy applies to
	Subjects []string              `protobuf:"bytes,3,rep,name=subjects" json:"subjects,omitempty"`
	Status   core_solo_io1.Status  `protobuf:"bytes,8,opt,name=status" json:"status"`
	Metadata core_solo_io.Metadata `protobuf:"bytes,9,opt,name=metadata" json:"metadata"`
}

func (m *Policy) Reset()                    { *m = Policy{} }
func (m *Policy) String() string            { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()               {}
func (*Policy) Descriptor() ([]byte, []int) { return fileDescriptorPolicy, []int{0} }

func (m *Policy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Policy) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Policy) GetCapabilities() []Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *Policy) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *Policy) GetStatus() core_solo_io1.Status {
	if m != nil {
		return m.Status
	}
	return core_solo_io1.Status{}
}

func (m *Policy) GetMetadata() core_solo_io.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core_solo_io.Metadata{}
}

//
// @solo-kit:resource
// @solo-kit:resource.short_name=identity
// @solo-kit:resource.plural_name=identities
// @solo-kit:resource.group_name=authorization.solo.io
// @solo-kit:resource.version=v1
type Identity struct {
	Description string                `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Group       string                `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Status      core_solo_io1.Status  `protobuf:"bytes,8,opt,name=status" json:"status"`
	Metadata    core_solo_io.Metadata `protobuf:"bytes,9,opt,name=metadata" json:"metadata"`
}

func (m *Identity) Reset()                    { *m = Identity{} }
func (m *Identity) String() string            { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()               {}
func (*Identity) Descriptor() ([]byte, []int) { return fileDescriptorPolicy, []int{1} }

func (m *Identity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Identity) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Identity) GetStatus() core_solo_io1.Status {
	if m != nil {
		return m.Status
	}
	return core_solo_io1.Status{}
}

func (m *Identity) GetMetadata() core_solo_io.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core_solo_io.Metadata{}
}

func init() {
	proto.RegisterType((*Policy)(nil), "authorization.solo.io.Policy")
	proto.RegisterType((*Identity)(nil), "authorization.solo.io.Identity")
	proto.RegisterEnum("authorization.solo.io.Capability", Capability_name, Capability_value)
}
func (this *Policy) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Policy)
	if !ok {
		that2, ok := that.(Policy)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if len(this.Resources) != len(that1.Resources) {
		return false
	}
	for i := range this.Resources {
		if this.Resources[i] != that1.Resources[i] {
			return false
		}
	}
	if len(this.Capabilities) != len(that1.Capabilities) {
		return false
	}
	for i := range this.Capabilities {
		if this.Capabilities[i] != that1.Capabilities[i] {
			return false
		}
	}
	if len(this.Subjects) != len(that1.Subjects) {
		return false
	}
	for i := range this.Subjects {
		if this.Subjects[i] != that1.Subjects[i] {
			return false
		}
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	return true
}
func (this *Identity) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Identity)
	if !ok {
		that2, ok := that.(Identity)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if this.Group != that1.Group {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	return true
}

func init() { proto.RegisterFile("policy/policy.proto", fileDescriptorPolicy) }

var fileDescriptorPolicy = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0xcd, 0xaa, 0xd3, 0x40,
	0x14, 0xc7, 0x6f, 0x3e, 0x6e, 0x48, 0xce, 0x15, 0x09, 0x63, 0x95, 0x50, 0x44, 0xe3, 0x5d, 0x05,
	0xc1, 0x84, 0x1b, 0x37, 0x77, 0xdb, 0x8f, 0x80, 0x85, 0x0a, 0x92, 0x06, 0x04, 0x77, 0x93, 0xe9,
	0x90, 0x8e, 0xfd, 0x98, 0x30, 0x33, 0x11, 0xea, 0x9b, 0xf8, 0x06, 0x2e, 0x7d, 0x0c, 0x9f, 0xc2,
	0x85, 0x4f, 0x22, 0x99, 0xa4, 0xad, 0x05, 0x91, 0xae, 0xee, 0xea, 0xe4, 0x9c, 0xf3, 0xfb, 0x27,
	0xff, 0x1c, 0xfe, 0xf0, 0xa4, 0xe6, 0x1b, 0x46, 0xf6, 0x49, 0x57, 0xe2, 0x5a, 0x70, 0xc5, 0xd1,
	0x53, 0xdc, 0xa8, 0x15, 0x17, 0xec, 0x2b, 0x56, 0x8c, 0xef, 0x62, 0xc9, 0x37, 0x3c, 0x66, 0x7c,
	0x38, 0xa8, 0x78, 0xc5, 0x35, 0x91, 0xb4, 0x4f, 0x1d, 0x3c, 0xbc, 0xab, 0x98, 0x5a, 0x35, 0x65,
	0x4c, 0xf8, 0x36, 0x69, 0xc9, 0x37, 0x8c, 0x77, 0x75, 0xcd, 0x54, 0x82, 0x6b, 0x96, 0x7c, 0xb9,
	0x4b, 0xb6, 0x54, 0xe1, 0x25, 0x56, 0xb8, 0x97, 0x24, 0x17, 0x48, 0xa4, 0xc2, 0xaa, 0x91, 0x9d,
	0xe0, 0xf6, 0x9b, 0x09, 0xce, 0x07, 0xed, 0x10, 0x85, 0x70, 0xb3, 0xa4, 0x92, 0x08, 0x56, 0xb7,
	0xde, 0x02, 0x23, 0x34, 0x22, 0x2f, 0xff, 0x7b, 0x84, 0x9e, 0x83, 0x27, 0xa8, 0xe4, 0x8d, 0x20,
	0x54, 0x06, 0x66, 0x68, 0x45, 0x5e, 0x7e, 0x1a, 0xa0, 0x0c, 0x1e, 0x11, 0x5c, 0xe3, 0x92, 0x6d,
	0x98, 0x62, 0x54, 0x06, 0x76, 0x68, 0x45, 0x8f, 0xd3, 0x57, 0xf1, 0x3f, 0x7f, 0x39, 0x9e, 0x1c,
	0xd0, 0x7d, 0x7e, 0x26, 0x43, 0x43, 0x70, 0x65, 0x53, 0x7e, 0xa6, 0x44, 0xc9, 0xc0, 0xd2, 0xdf,
	0x38, 0xf6, 0x28, 0x05, 0xa7, 0x73, 0x1f, 0xb8, 0xa1, 0x11, 0xdd, 0xa4, 0x83, 0x98, 0x70, 0x41,
	0x8f, 0xef, 0x5c, 0xe8, 0xdd, 0xd8, 0xfe, 0xf9, 0xeb, 0xe5, 0x55, 0xde, 0x93, 0xe8, 0x1e, 0xdc,
	0xc3, 0x91, 0x02, 0x4f, 0xab, 0x9e, 0x9d, 0xab, 0xde, 0xf7, 0xdb, 0x5e, 0x77, 0xa4, 0x6f, 0x7f,
	0x18, 0xe0, 0xce, 0x96, 0x74, 0xa7, 0x98, 0xba, 0xe4, 0x3a, 0x03, 0xb8, 0xae, 0x04, 0x6f, 0xea,
	0xc0, 0xd4, 0xbb, 0xae, 0x79, 0x58, 0xcb, 0xaf, 0xc7, 0x00, 0xa7, 0xc3, 0x22, 0x17, 0xec, 0x3c,
	0x1b, 0x4d, 0xfd, 0x2b, 0xe4, 0xc1, 0xf5, 0xc7, 0x7c, 0x56, 0x64, 0xbe, 0x81, 0x00, 0x9c, 0x69,
	0x36, 0xcf, 0x8a, 0xcc, 0x37, 0x5b, 0x60, 0x3e, 0x5b, 0x14, 0xbe, 0xa5, 0x81, 0x51, 0x31, 0x79,
	0xe7, 0xdb, 0xe3, 0xfb, 0xef, 0xbf, 0x5f, 0x18, 0x9f, 0xd2, 0xff, 0x25, 0xa9, 0x5e, 0x57, 0x87,
	0x34, 0x89, 0x12, 0x93, 0x3e, 0xe3, 0xa5, 0xa3, 0x33, 0xf5, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x72, 0x64, 0x50, 0x41, 0xfb, 0x02, 0x00, 0x00,
}
