// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: metadata.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	metadata.proto
	status.proto

It has these top-level messages:
	Metadata
	Status
*/
package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// *
// Metadata contains general properties of resources for purposes of versioning, annotating, and namespacing.
type Metadata struct {
	// a globally unique identifier across all resources. allows objects to be queried or referenced
	// without foreknowledge of their type
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	//
	// Name of the resource.
	//
	// Names must be unique and follow the following syntax rules:
	//
	// One or more lowercase rfc1035/rfc1123 labels separated by '.' with a maximum length of 253 characters.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace is used for the namespacing of resources.
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// An opaque value that represents the internal version of this object that can
	// be used by clients to determine when objects have changed.
	ResourceVersion string `protobuf:"bytes,4,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty" testdiff:"ignore"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. Some resources contain `selectors` which
	// can be linked with other resources by their labels
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Annotations is an unstructured key value map stored with a resource that may be
	// set by external tools to store and retrieve arbitrary metadata.
	Annotations map[string]string `protobuf:"bytes,6,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptorMetadata, []int{0} }

func (m *Metadata) GetGuid() string {
	if m != nil {
		return m.Guid
	}
	return ""
}

func (m *Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metadata) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Metadata) GetResourceVersion() string {
	if m != nil {
		return m.ResourceVersion
	}
	return ""
}

func (m *Metadata) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Metadata) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func init() {
	proto.RegisterType((*Metadata)(nil), "core.api.v1.Metadata")
}
func (this *Metadata) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Metadata)
	if !ok {
		that2, ok := that.(Metadata)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Guid != that1.Guid {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Namespace != that1.Namespace {
		return false
	}
	if this.ResourceVersion != that1.ResourceVersion {
		return false
	}
	if len(this.Labels) != len(that1.Labels) {
		return false
	}
	for i := range this.Labels {
		if this.Labels[i] != that1.Labels[i] {
			return false
		}
	}
	if len(this.Annotations) != len(that1.Annotations) {
		return false
	}
	for i := range this.Annotations {
		if this.Annotations[i] != that1.Annotations[i] {
			return false
		}
	}
	return true
}

func init() { proto.RegisterFile("metadata.proto", fileDescriptorMetadata) }

var fileDescriptorMetadata = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x41, 0x4e, 0x02, 0x31,
	0x14, 0x86, 0x33, 0x0c, 0x10, 0xe9, 0x24, 0x8a, 0x0d, 0x26, 0x13, 0x62, 0x14, 0x59, 0x18, 0x16,
	0xda, 0x09, 0xb8, 0x11, 0x16, 0x46, 0x49, 0x4c, 0x5c, 0xe8, 0x86, 0x85, 0x0b, 0x37, 0xa6, 0x0c,
	0x8f, 0xb1, 0x61, 0xe8, 0x9b, 0xb4, 0x9d, 0x49, 0xb8, 0x86, 0xa7, 0xf0, 0x54, 0x2e, 0x3c, 0x82,
	0x27, 0x30, 0xd3, 0x42, 0x20, 0xc6, 0x8d, 0xab, 0xf7, 0xf7, 0xef, 0xff, 0xbd, 0xb6, 0xaf, 0x64,
	0x7f, 0x09, 0x86, 0xcf, 0xb8, 0xe1, 0x2c, 0x53, 0x68, 0x90, 0x06, 0x31, 0x2a, 0x60, 0x3c, 0x13,
	0xac, 0xe8, 0xb7, 0x5b, 0x09, 0x26, 0x68, 0xfd, 0xa8, 0x54, 0x2e, 0xd2, 0x7d, 0xf7, 0xc9, 0xde,
	0xd3, 0x9a, 0xa2, 0x94, 0x54, 0x93, 0x5c, 0xcc, 0x42, 0xaf, 0xe3, 0xf5, 0x1a, 0x13, 0xab, 0x4b,
	0x4f, 0xf2, 0x25, 0x84, 0x15, 0xe7, 0x95, 0x9a, 0x1e, 0x93, 0x46, 0x59, 0x75, 0xc6, 0x63, 0x08,
	0x7d, 0xbb, 0xb1, 0x35, 0xe8, 0x2d, 0x69, 0x2a, 0xd0, 0x98, 0xab, 0x18, 0x5e, 0x0b, 0x50, 0x5a,
	0xa0, 0x0c, 0xab, 0x65, 0x68, 0x7c, 0xf4, 0xfd, 0x79, 0x7a, 0x68, 0x40, 0x9b, 0x99, 0x98, 0xcf,
	0x47, 0x5d, 0x91, 0x48, 0x54, 0xd0, 0x9d, 0x1c, 0x6c, 0xe2, 0xcf, 0x2e, 0x4d, 0x87, 0xa4, 0x9e,
	0xf2, 0x29, 0xa4, 0x3a, 0xac, 0x75, 0xfc, 0x5e, 0x30, 0x38, 0x63, 0x3b, 0x0f, 0x61, 0x9b, 0xeb,
	0xb2, 0x47, 0x9b, 0xb9, 0x97, 0x46, 0xad, 0x26, 0x6b, 0x80, 0x3e, 0x90, 0x80, 0x4b, 0x89, 0x86,
	0x1b, 0x81, 0x52, 0x87, 0x75, 0xcb, 0x9f, 0xff, 0xcd, 0xdf, 0x6d, 0x83, 0xae, 0xc9, 0x2e, 0xda,
	0x1e, 0x92, 0x60, 0xe7, 0x00, 0xda, 0x24, 0xfe, 0x02, 0x56, 0xeb, 0xd1, 0x94, 0x92, 0xb6, 0x48,
	0xad, 0xe0, 0x69, 0xbe, 0x19, 0x8d, 0x5b, 0x8c, 0x2a, 0xd7, 0x5e, 0xfb, 0x86, 0x34, 0x7f, 0xf7,
	0xfe, 0x0f, 0x3f, 0x1e, 0x7c, 0x7c, 0x9d, 0x78, 0x2f, 0x17, 0x89, 0x30, 0x6f, 0xf9, 0x94, 0xc5,
	0xb8, 0x8c, 0x34, 0xa6, 0x78, 0x29, 0xd0, 0xd5, 0x85, 0x30, 0x51, 0xb6, 0x48, 0x22, 0x9e, 0x89,
	0xc8, 0xac, 0x32, 0xd0, 0x51, 0xd1, 0x9f, 0xd6, 0xed, 0x7f, 0x5e, 0xfd, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x5f, 0x7b, 0x31, 0x41, 0x04, 0x02, 0x00, 0x00,
}
