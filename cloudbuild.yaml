steps:

- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args: ['-c', 'mkdir -p /go/pkg && cd /go/pkg && gsutil cat gs://$PROJECT_ID-cache/solo-kit/solo-kit-mod.tar.gz | tar -xzf -']
  id: 'untar-mod-cache'
  dir: &dir '/workspace/solo-kit'

# prepare-workspace to set up the project so it can be built and tested
- name: 'gcr.io/$PROJECT_ID/prepare-go-workspace:0.2.2'
  args:
  - "--repo-owner"
  - "solo-io"
  - "--repo-name"
  - solo-kit
  - "--repo-sha"
  - "$COMMIT_SHA"
  - "--repo-output-dir"
  - "."
  env:
  - 'GIT_SSH_CONFIG=FALSE'
  id: 'prepare-workspace'

# Installs go executables required by codegen tests
- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.4.3'
  args: ['update-deps']
  waitFor: ['prepare-workspace']
  id: 'update-deps'
  dir: *dir

# check code gen for kubernetes custom resources, should be no diff
- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.4.3'
  entrypoint: 'bash'
  args: ['ci/check-code-gen.sh']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-kit'
  - 'TAGGED_VERSION=$TAG_NAME'
#  waitFor: ['update-deps']
  dir: *dir
  id: 'check-code-and-docs-gen'

timeout: 1500s
tags: ['solo-kit']
options:
  machineType: 'N1_HIGHCPU_32'
  volumes:
  - name: 'gopath'
    path: '/go'