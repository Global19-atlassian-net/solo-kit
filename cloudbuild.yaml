steps:
- name: gcr.io/cloud-builders/gsutil
  entrypoint: 'bash'
  args: ['-c', 'mkdir -p /go/pkg && cd /go/pkg && gsutil cat gs://$PROJECT_ID-cache/solo-kit/solo-kit-mod.tar.gz | tar -xzf -']
  env:
  volumes: &vol
  - name: 'gopath'
    path: '/go/pkg'
  id: 'untar-mod-cache'


# donwload massive container in parallel
- name: 'gcr.io/$PROJECT_ID/e2e-go-mod-ginkgo:0.2.0'
  entrypoint: 'bash'
  args: ['-c', 'ls']
  volumes: *vol
  waitFor: ['-']

# Installs go executables required by codegen tests
- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.0'
  args: ['update-deps']
  waitFor: ['untar-mod-cache']
  volumes: *vol
  id: 'update-deps'

# check code gen for kubernetes custom resources, should be no diff
- name: 'gcr.io/$PROJECT_ID/go-mod-make:0.2.0'
  entrypoint: 'bash'
  args: ['ci/check-code-gen.sh']
  env:
  - 'TAGGED_VERSION=$TAG_NAME'
  waitFor: ['update-deps']
  volumes: *vol
  id: 'check-code-and-docs-gen'

  # start setting up kubeconfigs
- name: gcr.io/cloud-builders/gcloud
  args: ['config', 'set', 'compute/zone', 'us-central1-b']
  id: 'gcloud-compute-zone'

- name: gcr.io/cloud-builders/gcloud
  args: ['container', 'clusters', 'get-credentials', 'solo-kit-multicluster-2']
  id: 'gcloud-solo-kit-multicluster-2'

- name: gcr.io/cloud-builders/gcloud
  entrypoint: cp
  args:
  - /builder/home/.kube/config
  - /builder/home/.kube/solo-kit-multicluster-2-config
  id: 'copy-multicluster-2-config'

- name: gcr.io/cloud-builders/gcloud
  args: ['container', 'clusters', 'get-credentials', 'solo-kit-test']
  id: 'gcloud-solo-kit-test'

# e2e-ginkgo is produced from https://github.com/solo-io/cloud-builders/e2e-ginkgo
# sets up redis, consul, kubectl, go with required environment variables
# need to use the provided entrypoint
- name: 'gcr.io/$PROJECT_ID/e2e-go-mod-ginkgo:0.2.0'
  env:
  - 'RUN_KUBE_TESTS=1'
  - 'RUN_CONSUL_TESTS=1'
  - 'RUN_VAULT_TESTS=1'
  - 'SKIP_MOCK_GEN=1'
  - 'CLOUD_BUILD=1'
  - 'ALT_CLUSTER_KUBECONFIG=/builder/home/.kube/solo-kit-multicluster-2-config'
  args: ['-r', '-v', '-race', '-p', '-tags', 'solokit']
  volumes: *vol
  id: 'test'

- name: 'golang:1.13'
  args: ['go', 'build', '-o', 'solo-kit-gen', 'github.com/solo-io/solo-kit/cmd/cli']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-kit'
  id: 'build-cli'
  volumes: *vol
  waitFor: ['test']

- name: 'golang:1.13'
  args: ['go', 'build', '-o', 'solo-kit-cli', 'github.com/solo-io/solo-kit/cmd/solo-kit-gen']
  env:
  - 'PROJECT_ROOT=github.com/solo-io/solo-kit'
  id: 'build-codegen'
  volumes: *vol
  waitFor: ['test']

timeout: 1500s
tags: ['solo-kit']
options:
  machineType: 'N1_HIGHCPU_32'