// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: faultinjection/fault.proto

package faultinjection // import "github.com/solo-io/solo-kit/projects/gloo/pkg/api/v1/plugins/faultinjection"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import bytes "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RouteFault struct {
	Percentage           uint32   `protobuf:"varint,1,opt,name=percentage,proto3" json:"percentage,omitempty"`
	HttpStatus           uint32   `protobuf:"varint,2,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteFault) Reset()         { *m = RouteFault{} }
func (m *RouteFault) String() string { return proto.CompactTextString(m) }
func (*RouteFault) ProtoMessage()    {}
func (*RouteFault) Descriptor() ([]byte, []int) {
	return fileDescriptor_fault_7719a6e110b6f514, []int{0}
}
func (m *RouteFault) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteFault.Unmarshal(m, b)
}
func (m *RouteFault) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteFault.Marshal(b, m, deterministic)
}
func (dst *RouteFault) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteFault.Merge(dst, src)
}
func (m *RouteFault) XXX_Size() int {
	return xxx_messageInfo_RouteFault.Size(m)
}
func (m *RouteFault) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteFault.DiscardUnknown(m)
}

var xxx_messageInfo_RouteFault proto.InternalMessageInfo

func (m *RouteFault) GetPercentage() uint32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func (m *RouteFault) GetHttpStatus() uint32 {
	if m != nil {
		return m.HttpStatus
	}
	return 0
}

func init() {
	proto.RegisterType((*RouteFault)(nil), "fault.plugins.gloo.solo.io.RouteFault")
}
func (this *RouteFault) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RouteFault)
	if !ok {
		that2, ok := that.(RouteFault)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Percentage != that1.Percentage {
		return false
	}
	if this.HttpStatus != that1.HttpStatus {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}

func init() { proto.RegisterFile("faultinjection/fault.proto", fileDescriptor_fault_7719a6e110b6f514) }

var fileDescriptor_fault_7719a6e110b6f514 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x31, 0x6e, 0xc3, 0x30,
	0x0c, 0x45, 0xe1, 0x0e, 0x1d, 0x54, 0x74, 0x31, 0x3a, 0x18, 0x1e, 0xdc, 0xa2, 0x53, 0x97, 0x8a,
	0x28, 0x7a, 0x83, 0x0e, 0x5d, 0x82, 0x0c, 0x71, 0xb6, 0x2c, 0x81, 0x6c, 0x28, 0x32, 0x63, 0x45,
	0x14, 0x2c, 0x2a, 0x67, 0xca, 0xb9, 0x72, 0x92, 0x40, 0xb2, 0x87, 0x64, 0x22, 0xff, 0xc7, 0xff,
	0xe0, 0xa3, 0xa8, 0x0f, 0x2a, 0x5a, 0x46, 0x77, 0xd4, 0x3d, 0x23, 0x39, 0xc8, 0x52, 0xfa, 0x89,
	0x98, 0xca, 0x7a, 0x11, 0x36, 0x1a, 0x74, 0x41, 0x1a, 0x4b, 0x24, 0x03, 0x59, 0x92, 0x48, 0xf5,
	0x9b, 0x21, 0x43, 0x39, 0x06, 0x69, 0x9b, 0x1b, 0x9f, 0x6b, 0x21, 0x5a, 0x8a, 0xac, 0xff, 0x53,
	0xb1, 0x6c, 0x84, 0xf0, 0x7a, 0xea, 0xb5, 0x63, 0x65, 0x74, 0x55, 0x7c, 0x14, 0x5f, 0xaf, 0xed,
	0x9d, 0x53, 0xbe, 0x8b, 0x97, 0x81, 0xd9, 0xef, 0x03, 0x2b, 0x8e, 0xa1, 0x7a, 0x9a, 0x03, 0xc9,
	0xda, 0x66, 0xe7, 0x6f, 0x73, 0xb9, 0x36, 0xc5, 0x6e, 0x65, 0x90, 0x87, 0xd8, 0xc9, 0x9e, 0x4e,
	0x90, 0xce, 0x7f, 0x23, 0xcd, 0x73, 0x44, 0x06, 0x3f, 0x51, 0x42, 0x0f, 0x90, 0xe8, 0xc0, 0x8f,
	0x06, 0x94, 0x47, 0x38, 0xff, 0xc0, 0x42, 0x0d, 0x8f, 0xff, 0x75, 0xcf, 0x19, 0xf4, 0xf7, 0x16,
	0x00, 0x00, 0xff, 0xff, 0xc4, 0x44, 0xee, 0x89, 0xf8, 0x00, 0x00, 0x00,
}
