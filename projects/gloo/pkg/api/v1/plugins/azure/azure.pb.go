// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: azure/azure.proto

/*
Package azure is a generated protocol buffer package.

It is generated from these files:
	azure/azure.proto

It has these top-level messages:
	UpstreamSpec
	DestinationSpec
*/
package azure

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Upstream Spec for Azure Functions Upstreams
// Azure Upstreams represent a collection of Azure Functions for a particular Azure Account
// within a particular Function App
type UpstreamSpec struct {
	// The Name of the Azure Function App where the functions are grouped
	FunctionAppName string `protobuf:"bytes,1,opt,name=function_app_name,json=functionAppName,proto3" json:"function_app_name,omitempty"`
	// A [Gloo Secret Ref](https://gloo.solo.io/introduction/concepts/#Secrets) to an [Azure Publish Profile JSON file](https://azure.microsoft.com/en-us/downloads/publishing-profile-overview/).
	// {{ hide_not_implemented "Azure Secrets can be created with `glooctl secret create azure ...`" }}
	// Note that this secret is not required unless Function Discovery is enabled
	SecretRef string                       `protobuf:"bytes,2,opt,name=secret_ref,json=secretRef,proto3" json:"secret_ref,omitempty"`
	Functions []*UpstreamSpec_FunctionSpec `protobuf:"bytes,3,rep,name=functions" json:"functions,omitempty"`
}

func (m *UpstreamSpec) Reset()                    { *m = UpstreamSpec{} }
func (m *UpstreamSpec) String() string            { return proto.CompactTextString(m) }
func (*UpstreamSpec) ProtoMessage()               {}
func (*UpstreamSpec) Descriptor() ([]byte, []int) { return fileDescriptorAzure, []int{0} }

func (m *UpstreamSpec) GetFunctionAppName() string {
	if m != nil {
		return m.FunctionAppName
	}
	return ""
}

func (m *UpstreamSpec) GetSecretRef() string {
	if m != nil {
		return m.SecretRef
	}
	return ""
}

func (m *UpstreamSpec) GetFunctions() []*UpstreamSpec_FunctionSpec {
	if m != nil {
		return m.Functions
	}
	return nil
}

// Function Spec for Functions on Azure Functions Upstreams
// The Function Spec contains data necessary for Gloo to invoke Azure functions
type UpstreamSpec_FunctionSpec struct {
	// The Name of the Azure Function as it appears in the Azure Functions Portal
	FunctionName string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	// Auth Level can bve either "anonymous" "function" or "admin"
	// See https://vincentlauzon.com/2017/12/04/azure-functions-http-authorization-levels/ for more details
	AuthLevel string `protobuf:"bytes,2,opt,name=auth_level,json=authLevel,proto3" json:"auth_level,omitempty"`
}

func (m *UpstreamSpec_FunctionSpec) Reset()         { *m = UpstreamSpec_FunctionSpec{} }
func (m *UpstreamSpec_FunctionSpec) String() string { return proto.CompactTextString(m) }
func (*UpstreamSpec_FunctionSpec) ProtoMessage()    {}
func (*UpstreamSpec_FunctionSpec) Descriptor() ([]byte, []int) {
	return fileDescriptorAzure, []int{0, 0}
}

func (m *UpstreamSpec_FunctionSpec) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *UpstreamSpec_FunctionSpec) GetAuthLevel() string {
	if m != nil {
		return m.AuthLevel
	}
	return ""
}

type DestinationSpec struct {
	// The Fucntion Name of the FunctionSpec to be invoked.
	FunctionName string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
}

func (m *DestinationSpec) Reset()                    { *m = DestinationSpec{} }
func (m *DestinationSpec) String() string            { return proto.CompactTextString(m) }
func (*DestinationSpec) ProtoMessage()               {}
func (*DestinationSpec) Descriptor() ([]byte, []int) { return fileDescriptorAzure, []int{1} }

func (m *DestinationSpec) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func init() {
	proto.RegisterType((*UpstreamSpec)(nil), "azure.plugins.gloo.solo.io.UpstreamSpec")
	proto.RegisterType((*UpstreamSpec_FunctionSpec)(nil), "azure.plugins.gloo.solo.io.UpstreamSpec.FunctionSpec")
	proto.RegisterType((*DestinationSpec)(nil), "azure.plugins.gloo.solo.io.DestinationSpec")
}
func (this *UpstreamSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpstreamSpec)
	if !ok {
		that2, ok := that.(UpstreamSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FunctionAppName != that1.FunctionAppName {
		return false
	}
	if this.SecretRef != that1.SecretRef {
		return false
	}
	if len(this.Functions) != len(that1.Functions) {
		return false
	}
	for i := range this.Functions {
		if !this.Functions[i].Equal(that1.Functions[i]) {
			return false
		}
	}
	return true
}
func (this *UpstreamSpec_FunctionSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpstreamSpec_FunctionSpec)
	if !ok {
		that2, ok := that.(UpstreamSpec_FunctionSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FunctionName != that1.FunctionName {
		return false
	}
	if this.AuthLevel != that1.AuthLevel {
		return false
	}
	return true
}
func (this *DestinationSpec) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*DestinationSpec)
	if !ok {
		that2, ok := that.(DestinationSpec)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.FunctionName != that1.FunctionName {
		return false
	}
	return true
}

func init() { proto.RegisterFile("azure/azure.proto", fileDescriptorAzure) }

var fileDescriptorAzure = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xd9, 0x06, 0x42, 0x63, 0x65, 0xac, 0x78, 0x28, 0x05, 0x65, 0xcc, 0xcb, 0x10, 0x4c,
	0x50, 0xd1, 0xbb, 0x43, 0xc4, 0x83, 0x78, 0xe8, 0xf0, 0xe2, 0xa5, 0x64, 0xe5, 0x35, 0x8b, 0x6b,
	0xfb, 0x42, 0x92, 0xee, 0xe0, 0xd1, 0x4f, 0xe3, 0xe7, 0xf2, 0x93, 0x48, 0xda, 0x46, 0x7b, 0xf1,
	0xe0, 0x25, 0xc9, 0xfb, 0xbf, 0xf7, 0x7f, 0xfc, 0x5e, 0x1e, 0x99, 0xf1, 0xf7, 0x46, 0x03, 0x6b,
	0x4f, 0xaa, 0x34, 0x5a, 0x8c, 0x92, 0x3e, 0x28, 0x1b, 0x21, 0x6b, 0x43, 0x45, 0x89, 0x48, 0x0d,
	0x96, 0x48, 0x25, 0x26, 0xc7, 0x02, 0x05, 0xb6, 0x65, 0xcc, 0xbd, 0x3a, 0xc7, 0xe2, 0x63, 0x4c,
	0xc2, 0x17, 0x65, 0xac, 0x06, 0x5e, 0xad, 0x15, 0xe4, 0xd1, 0x39, 0x99, 0x15, 0x4d, 0x9d, 0x5b,
	0x89, 0x75, 0xc6, 0x95, 0xca, 0x6a, 0x5e, 0x41, 0x3c, 0x9a, 0x8f, 0x96, 0x41, 0x3a, 0xf5, 0x89,
	0x3b, 0xa5, 0x9e, 0x79, 0x05, 0xd1, 0x09, 0x21, 0x06, 0x72, 0x0d, 0x36, 0xd3, 0x50, 0xc4, 0xe3,
	0xb6, 0x28, 0xe8, 0x94, 0x14, 0x8a, 0x68, 0x4d, 0x02, 0xef, 0x30, 0xf1, 0x64, 0x3e, 0x59, 0x1e,
	0x5e, 0xdd, 0xd0, 0xbf, 0x09, 0xe9, 0x90, 0x83, 0x3e, 0xf4, 0x4e, 0x17, 0xa4, 0xbf, 0x7d, 0x92,
	0x94, 0x84, 0xc3, 0x54, 0x74, 0x46, 0x8e, 0x7e, 0x78, 0x07, 0xac, 0xa1, 0x17, 0x3d, 0x28, 0x6f,
	0xec, 0x36, 0x2b, 0x61, 0x0f, 0xa5, 0x07, 0x75, 0xca, 0x93, 0x13, 0x16, 0xb7, 0x64, 0x7a, 0x0f,
	0xc6, 0xca, 0x9a, 0xff, 0xab, 0xed, 0xea, 0xf1, 0xf3, 0xeb, 0x74, 0xf4, 0xba, 0x12, 0xd2, 0x6e,
	0x9b, 0x0d, 0xcd, 0xb1, 0x62, 0x6e, 0x94, 0x0b, 0x89, 0xdd, 0xbd, 0x93, 0x96, 0x29, 0x8d, 0x6f,
	0x90, 0x5b, 0xc3, 0xdc, 0xa4, 0x4c, 0xed, 0x04, 0xe3, 0x4a, 0xb2, 0xfd, 0x25, 0xeb, 0x7f, 0xa0,
	0x5b, 0xdf, 0xe6, 0xa0, 0xdd, 0xc6, 0xf5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x63, 0xc6, 0x7b,
	0x62, 0xd4, 0x01, 0x00, 0x00,
}
