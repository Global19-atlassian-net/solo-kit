// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: schema.proto

package v1

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import core_solo_io "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
import core_solo_io1 "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
import _ "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

//
// @solo-kit:resource.short_name=sc
// @solo-kit:resource.plural_name=schemas
// @solo-kit:resource.resource_groups=api.sqoop.solo.io
//
// The Schema object wraps the user's GraphQL Schema, which is stored as an inline string.
// The Schema Object contains a Status field which is used by SQooP to validate the user's input schema.
//
// Schemas are matched to resolver maps in the same namespace with the same name
type Schema struct {
	// inline the entire graphql schema as a string here
	InlineSchema string `protobuf:"bytes,3,opt,name=inline_schema,json=inlineSchema,proto3" json:"inline_schema,omitempty"`
	// Status indicates the validation status of this resource.
	// Status is read-only by clients, and set by gloo during validation
	Status core_solo_io1.Status `protobuf:"bytes,6,opt,name=status" json:"status" testdiff:"ignore"`
	// Metadata contains the object metadata for this resource
	Metadata core_solo_io.Metadata `protobuf:"bytes,7,opt,name=metadata" json:"metadata"`
}

func (m *Schema) Reset()                    { *m = Schema{} }
func (m *Schema) String() string            { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()               {}
func (*Schema) Descriptor() ([]byte, []int) { return fileDescriptorSchema, []int{0} }

func (m *Schema) GetInlineSchema() string {
	if m != nil {
		return m.InlineSchema
	}
	return ""
}

func (m *Schema) GetStatus() core_solo_io1.Status {
	if m != nil {
		return m.Status
	}
	return core_solo_io1.Status{}
}

func (m *Schema) GetMetadata() core_solo_io.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core_solo_io.Metadata{}
}

func init() {
	proto.RegisterType((*Schema)(nil), "sqoop.solo.io.Schema")
}
func (this *Schema) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Schema)
	if !ok {
		that2, ok := that.(Schema)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.InlineSchema != that1.InlineSchema {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	return true
}

func init() { proto.RegisterFile("schema.proto", fileDescriptorSchema) }

var fileDescriptorSchema = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0xce, 0x48,
	0xcd, 0x4d, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2d, 0x2e, 0xcc, 0xcf, 0x2f, 0xd0,
	0x2b, 0xce, 0xcf, 0xc9, 0xd7, 0xcb, 0xcc, 0x97, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0xcb, 0xe8,
	0x83, 0x58, 0x10, 0x45, 0x52, 0x86, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9,
	0xfa, 0x20, 0x95, 0xba, 0x99, 0xf9, 0x10, 0x3a, 0x3b, 0xb3, 0x44, 0x3f, 0xb1, 0x20, 0x53, 0xbf,
	0xcc, 0x50, 0x3f, 0x37, 0xb5, 0x24, 0x31, 0x25, 0xb1, 0x04, 0x6a, 0xae, 0x94, 0x3e, 0x11, 0x5a,
	0x8a, 0x4b, 0x12, 0x4b, 0x4a, 0x8b, 0xa1, 0x1a, 0x74, 0x88, 0xd0, 0x50, 0x94, 0x9a, 0x06, 0x51,
	0xad, 0xb4, 0x81, 0x91, 0x8b, 0x2d, 0x18, 0xec, 0x0f, 0x21, 0x65, 0x2e, 0xde, 0xcc, 0xbc, 0x9c,
	0xcc, 0xbc, 0xd4, 0x78, 0x88, 0xc7, 0x24, 0x98, 0x15, 0x18, 0x35, 0x38, 0x83, 0x78, 0x20, 0x82,
	0x50, 0x45, 0xee, 0x5c, 0x6c, 0x10, 0xdb, 0x24, 0xd8, 0x14, 0x18, 0x35, 0xb8, 0x8d, 0x44, 0xf4,
	0x92, 0xf3, 0x8b, 0x52, 0x61, 0xde, 0xd6, 0x0b, 0x06, 0xcb, 0x39, 0x49, 0x9e, 0xb8, 0x27, 0xcf,
	0xf0, 0xe9, 0x9e, 0xbc, 0x60, 0x49, 0x6a, 0x71, 0x49, 0x4a, 0x66, 0x5a, 0x9a, 0x95, 0x52, 0x66,
	0x7a, 0x5e, 0x7e, 0x51, 0xaa, 0x52, 0x10, 0x54, 0xbb, 0x90, 0x05, 0x17, 0x07, 0xcc, 0xa7, 0x12,
	0xec, 0x60, 0xa3, 0xc4, 0x50, 0x8d, 0xf2, 0x85, 0xca, 0x3a, 0xb1, 0x80, 0x0c, 0x0b, 0x82, 0xab,
	0x76, 0xb2, 0x5e, 0xf1, 0x48, 0x8e, 0x31, 0xca, 0x14, 0x9f, 0x37, 0x0b, 0x8a, 0xf2, 0xb3, 0x52,
	0x93, 0x4b, 0x8a, 0xf5, 0xc1, 0x91, 0xa2, 0x5f, 0x90, 0x9d, 0x0e, 0xf5, 0x79, 0x12, 0x1b, 0xd8,
	0xdb, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x31, 0xf8, 0x7e, 0xaf, 0xbd, 0x01, 0x00, 0x00,
}
